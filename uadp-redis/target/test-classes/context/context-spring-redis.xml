<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--Redis Sentinel（暂称为：哨兵）支持-->
    <!--    <bean id="sentinelConfig"
              class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
            <constructor-arg name="master" value="mymaster" />
            <constructor-arg name="sentinelHostAndPorts">
                <set>
                    <value>192.168.88.153:26379</value>
                    <value>192.168.88.153:26380</value>
                    <value>192.168.88.153:26382</value>
                </set>
            </constructor-arg>
        </bean>-->
    <!--集群配置-->
    <bean id="clusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <!--<constructor-arg ref="sentinelConfig" />-->
        <constructor-arg >
            <list>
                <value>${cache.cluster.redis.nodes}</value>
            </list>
        </constructor-arg>
    </bean>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="300"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="1"/>
        <property name="maxWaitMillis" value="30000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <!-- <property name="testWhileIdle" value="true"/> -->
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:use-pool="true">
        <!--<constructor-arg ref="sentinelConfig" />-->
        <constructor-arg ref="clusterConfig"/>
        <constructor-arg ref="jedisPoolConfig" />
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean>
    
    <bean id="redisService" class="com.myzh.cache.redis.RedisCacheUseSpringServiceImpl"/>
</beans>